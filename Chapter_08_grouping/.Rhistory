help(lm)
#---------------------------------------
# disconnect and unload driver when done
dbDisconnect(con)
dbUnloadDriver(drv)
library("RPostgreSQL")
#---------------------------------------
# disconnect and unload driver when done
dbDisconnect(con)
dbUnloadDriver(drv)
setwd("~/anaconda3/envs/notebook/analysis/ignore/children_hospitals")
library(tidyverse)
df <- read.csv("data.csv", header=T, na.strings=c("-","NA"))
summary(df)
# save summary stats in a dataframe so we can refer to them later
dfsum <- data.frame(unclass(summary(df)), check.names = FALSE, stringsAsFactors = FALSE)
write_csv(dfsum,'data_summary.csv')
View(dfsum)
qplot(totalNPR,
data=df,
fill=factor(fy),
bins = 12
)
View(df)
qplot(totalNPR,
data=df,
fill=factor(fy),
bins = 30
)
qplot(margin,
data=df,
fill=factor(fy),
bins = 30
)
qplot(net_income,
data=df,
fill=factor(fy),
bins = 30
)
qplot(compensation_perc,
data=df,
fill=factor(fy),
bins = 30
)
setwd("~/anaconda3/envs/notebook/analysis/ignore/children_hospitals")
library(tidyverse)
options("scipen" = 10)
df <- read.csv("data.csv", header=T, na.strings=c("-","NA"))
summary(df)
# save summary stats in a dataframe so we can refer to them later
dfsum <- data.frame(unclass(summary(df)), check.names = FALSE, stringsAsFactors = FALSE)
write_csv(dfsum,'data_summary.csv')
qplot(totalNPR,
data=df,
fill=factor(fy),
bins = 30
)
qplot(margin,
data=df,
fill=factor(fy),
bins = 30
)
qplot(net_income,
data=df,
fill=factor(fy),
bins = 30
)
qplot(compensation_perc,
data=df,
fill=factor(fy),
bins = 30
)
years <- table(df$fy)
years
df5 <- filter(df$fy != c("2011","2018"))
years5 <- table(df$fy)
years5
years5 <- table(df5$fy)
df5 <- filter(df$fy %in% c("2012","2013","2014","2015","2016","2017"))
years5 <- table(df5$fy)
df5 <- filter(!df$fy %in% c("2011","2018"))
df5 <- filter(!df, fy %in% c("2011","2018"))
df5 <- filter(!df, fy %in% c(2011,2018))
df5 <- filter(df, !fy %in% c(2011,2018))
years5 <- table(df5$fy)
years5
qplot(totalNPR,
data=df5,
fill=factor(fy),
bins = 30
)
qplot(margin,
data=df5,
fill=factor(fy),
bins = 30
)
qplot(net_income,
data=df5,
fill=factor(fy),
bins = 30
)
qplot(compensation_perc,
data=df5,
fill=factor(fy),
bins = 30
)
View(df5)
setwd("~/anaconda3/envs/pracSQL/Chapter_08")
library("RPostgreSQL")
# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# creates a connection to the postgres database
con <- dbConnect(drv, dbname = "aranalysis",
host = "localhost", port = 5432,
user = "tbroderick")#, password = pw)
# creates a connection to the postgres database
con <- dbConnect(drv, dbname = "aranalysis",
host = "localhost", port = 5432,
user = "tbroderick")#, password = pw)
setwd("~/anaconda3/envs/pracSQL/Chapter_08_grouping")
# ---------------
# finally, disconnect
dbDisconnect(con)
dbUnloadDriver(drv)
setwd("~/anaconda3/envs/pracSQL/Chapter_08_grouping")
library("RPostgreSQL")
# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# creates a connection to the postgres database
con <- dbConnect(drv, dbname = "aranalysis",
host = "localhost", port = 5432,
user = "tbroderick")#, password = pw)
sql <- "
SELECT stabr FROM pls_fy2014_pupld14a
GROUP BY stabr ORDER BY stabr;
"
dbGetQuery(con, sql)
# list of cities and states
sql <- "
SELECT city, stabr FROM pls_fy2014_pupld14a
GROUP BY city, stabr ORDER BY city, stabr;
"
dfcity <- dbGetQuery(con, sql)
nrow(dfcity)
View(dfcity)
# now we select state, sum of centlib where there are no -3
# and groupby state and centlib, while ordering by sum
sql <- "
SELECT stabr, sum(centlib) FROM pls_fy2014_pupld14a
WHERE centlib != -3
GROUP BY stabr, centlib
ORDER BY sum(centlib) DESC;
"
dfcenlib <- dbGetQuery(con, sql)
View(dfcenlib)
# let's do the same with branch libraries
sql <- "
SELECT branlib FROM pls_fy2014_pupld14a;
"
dfbranlib <- dbGetQuery(con, sql)
View(dfbranlib)
sql <- "
SELECT sum(branlib) FROM pls_fy2014_pupld14a
WHERE branlib != -3;
"
dbGetQuery(con, sql)
sql <- "
SELECT stabr, sum(branlib) FROM pls_fy2014_pupld14a
WHERE branlib != -3
GROUP BY stabr, branlib
ORDER BY sum(branlib) DESC;
"
dfbranlib <- dbGetQuery(con, sql)
View(dfbranlib)
sql <- "
SELECT city, stabr, sum(branlib) FROM pls_fy2014_pupld14a
WHERE branlib != -3
GROUP BY city, stabr, branlib
ORDER BY sum(branlib) DESC;
"
dfbrancit <- dbGetQuery(con, sql)
View(dfbrancit)
sql <- "
SELECT libname, city, stabr, branlib FROM pls_fy2014_pupld14a
WHERE branlib > 0
ORDER BY branlib DESC;
"
dfbrancit <- dbGetQuery(con, sql)
nrow(dfbrancit)
View(dfbrancit)
# check the imports
sql <- "SELECT count(*) FROM pls_fy2014_pupld14a;"
dbGetQuery(con, sql)
sql <- "SELECT count(*) FROM pls_fy2009_pupld09a;"
dbGetQuery(con, sql)
# count duplicate names
sql <- "SELECT libname, count(libname)
FROM pls_fy2014_pupld14a
GROUP BY libname
ORDER BY count(libname) DESC;"
dbGetQuery(con, sql)
dups <- dbGetQuery(con, sql)
View(dups)
# interesting. Here's how to see location of every Oxford Public Library
sql <- "SELECT libname, city, stabr
WHERE libname = 'Oxford Public Library'
"
dbGetQuery(con, sql)
# interesting. Here's how to see location of every Oxford Public Library
sql <- "SELECT libname, city, stabr
FROM pls_fy2014_pupld14a
WHERE libname = 'Oxford Public Library';
"
dbGetQuery(con, sql)
# interesting. Here's how to see location of every Oxford Public Library
sql <- "SELECT libname, city, stabr
FROM pls_fy2014_pupld14a
WHERE libname == 'Oxford Public Library';
"
dbGetQuery(con, sql)
# interesting. Here's how to see location of every Oxford Public Library
sql <- "SELECT libname, city, stabr
FROM pls_fy2014_pupld14a
WHERE libname = 'OXFORD PUBLIC LIBRARY';
"
dbGetQuery(con, sql)
# get a count
sql <- "SELECT city, stabr, count(*)
FROM pls_fy2014_pupld14a
GROUP BY city, stabr
ORDER BY count(*) DESC;
"
dbGetQuery(con, sql)
# that's interesting. Pittsburgh has the most? Let's see them
sql <- "SELECT libname, city, stabr
FROM pls_fy2014_pupld14a
WHERE city = 'PITTSBURGH'
AND stabr = 'PA';
"
dbGetQuery(con, sql)
# let's do the same with branch libraries
sql <- "
SELECT count(branlib) FROM pls_fy2014_pupld14a;
"
dbGetQuery(con, sql)
sql <- "
SELECT sum(branlib) FROM pls_fy2014_pupld14a
WHERE branlib != -3;
"
dbGetQuery(con, sql)
sql <- "
SELECT sum(branlib) FROM pls_fy2014_pupld14a
WHERE branlib != -3;
"
dbGetQuery(con, sql)
# is it enough to just exclude -3?
sql <- "
SELECT sum(branlib) FROM pls_fy2014_pupld14a
WHERE branlib >= 0;
"
dbGetQuery(con, sql)
# is it enough to just exclude -3?
sql <- "
SELECT sum(branlib) FROM pls_fy2014_pupld14a
WHERE branlib > 0;
"
dbGetQuery(con, sql)
sql <- "
SELECT stabr, sum(branlib) FROM pls_fy2014_pupld14a
WHERE branlib > 0
GROUP BY stabr, branlib
ORDER BY sum(branlib) DESC;
"
dfbranlib <- dbGetQuery(con, sql)
View(dfbranlib)
# GROUP BY with count() on the stabr and stataddr columns
sql <- "SELECT stabr, stataddr, count(*)
FROM pls_fy2014_pupld14a
GROUP BY stabr, stataddr
ORDER BY stabr ASC, count(*) DESC;
"
dbGetQuery(con, sql)
#2014
sql <- "
SELECT sum(visits) AS visits_2014
FROM pls_fy2014_pupld14a
WHERE visits >= 0;
"
dbGetQuery(con, sql)
#2009
sql <- "
SELECT sum(visits) AS visits_2009
FROM pls_fy2009_pupld14a
WHERE visits >= 0;
"
dbGetQuery(con, sql)
#2009
sql <- "
SELECT sum(visits) AS visits_2009
FROM pls_fy2009_pupld09a
WHERE visits >= 0;
"
dbGetQuery(con, sql)
# let's join the tables to get results side-by-side
sql <- "SELECT sum(pls14.visits) AS visits_2014,
sum(pls09.visits) AS visits_2009
FROM pls_fy2014_pupld14a pls14 JOIN pls_fy2009_pupld09a pls09
ON pls14.fscskey = pls09.fscskey
WHERE pls14.visits >= 0 AND pls09.visits >= 0;
"
dbGetQuery(con, sql)
# Using GROUP BY to track percent change in library visits by state
sql <- "SELECT pls14.stabr,
sum(pls14.visits) AS visits_2014,
sum(pls09.visits) AS visits_2009,
round( (CAST(sum(pls14.visits) AS decimal(10,1)) - sum(pls09.visits)) /
sum(pls09.visits) * 100, 2 ) AS pct_change
FROM pls_fy2014_pupld14a pls14 JOIN pls_fy2009_pupld09a pls09
ON pls14.fscskey = pls09.fscskey
WHERE pls14.visits >= 0 AND pls09.visits >= 0
GROUP BY pls14.stabr
ORDER BY pct_change DESC;"
dbGetQuery(con, sql)
sql <- "SELECT pls14.stabr,
sum(pls14.visits) AS visits_2014,
sum(pls09.visits) AS visits_2009,
round( (CAST(sum(pls14.visits) AS decimal(10,1)) - sum(pls09.visits)) /
sum(pls09.visits) * 100, 2 ) AS pct_change
FROM pls_fy2014_pupld14a JOIN pls_fy2009_pupld09a
ON pls14.fscskey = pls09.fscskey
WHERE pls14.visits >= 0 AND pls09.visits >= 0
GROUP BY pls14.stabr
ORDER BY pct_change DESC;"
dbGetQuery(con, sql)
sql <- "SELECT pls14.stabr,
sum(pls14.visits) AS visits_2014,
sum(pls09.visits) AS visits_2009,
round( (CAST(sum(pls14.visits) AS decimal(10,1)) - sum(pls09.visits)) /
sum(pls09.visits) * 100, 2 ) AS pct_change
FROM pls_fy2014_pupld14a pls14 JOIN pls_fy2009_pupld09a pls09
ON pls14.fscskey = pls09.fscskey
WHERE pls14.visits >= 0 AND pls09.visits >= 0
GROUP BY pls14.stabr
HAVING sum(pls14.visits) > 50000000
ORDER BY pct_change DESC;
"
dbGetQuery(con, sql)
