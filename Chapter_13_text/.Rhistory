number <- dbGetQuery(con, sql)
View(number)
dfcount <- number %>%
group_by(fyear) %>%
summarise(reports = n())
View(dfcount)
install.packages('odbc')
?odbc
install.pacages('DBI')
install.packages('DBI')
library('odbc')
sort(unique(odbcListDrivers()))
sort(unique(odbcListDrivers()[[1]]))
#install.packages('RODBC')
library(RODBC)
odbcDriverConnect("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=mdb/hospital.mdb")
# set directory
setwd("~/anaconda3/envs/pracSQL/Chapter_13_text")
# load libraries
library(tidyverse)
#library('readxl')
library("RPostgreSQL")
options("scipen" = 10)
# connect to postgres (remembert to turn it on)
drv <- dbDriver("PostgreSQL")
# connect to aranalysis (for pracSQL)
con <- dbConnect(drv, dbname = "aranalysis",
host = "localhost", port = 5432,
user = "tbroderick")
sql <- "CREATE TABLE crime_reports (
crime_id bigserial PRIMARY KEY,
date_1 timestamp with time zone,
date_2 timestamp with time zone,
street varchar(250),
city varchar(100),
crime_type varchar(100),
description text,
case_number varchar(50),
original_text text NOT NULL
);"
dbGetQuery(con, sql)
sql <- "COPY crime_reports (original_text)
FROM '/Users/tbroderick/anaconda3/envs/pracSQL/Chapter_13_text/crime_reports.csv'
WITH (FORMAT CSV, HEADER OFF, QUOTE '\"');"
dbGetQuery(con, sql)
df <- dbGetQuery(con, sql)
sql <- "SELECT original_text FROM crime_reports;"
df <- dbGetQuery(con, sql)
View(df)
View(df)
# use regexp_match to grab the dates
# remember we need to escape \
sql <- "SELECT crime_id,
regexp_match(original_text, '\\d{1,2}\\/\\d{1,2}\\/\\d{2}')
FROM crime_reports;"
dbGetQuery(con, sql)
dfdates <- dbGetQuery(con, sql)
View(dfdates)
# in r
str_match(df , "original_text, '\\d{1,2}\\/\\d{1,2}\\/\\d{2}'")
# in r
str_match(df , '\\d{1,2}\\/\\d{1,2}\\/\\d{2}')
# in r
str_match(df[0] , '\\d{1,2}\\/\\d{1,2}\\/\\d{2}')
# in r
str_match(df[1] , '\\d{1,2}\\/\\d{1,2}\\/\\d{2}')
# in r
str_match(df[1],'\\d{1,2}\\/\\d{1,2}\\/\\d{2}')
# set directory
setwd("~/anaconda3/envs/pracSQL/Chapter_13_text")
# load libraries
library(tidyverse)
#library('readxl')
library("RPostgreSQL")
options("scipen" = 10)
# connect to postgres (remembert to turn it on)
drv <- dbDriver("PostgreSQL")
# connect to aranalysis (for pracSQL)
con <- dbConnect(drv, dbname = "aranalysis",
host = "localhost", port = 5432,
user = "tbroderick")
# use regexp_match to grab the dates
# remember we need to escape \
sql <- "SELECT crime_id,
regexp_match(original_text, '\\d{1,2}\\/\\d{1,2}\\/\\d{2}')
FROM crime_reports;"
dbGetQuery(con, sql)
# gets the first date as an array.
# but we can store that in a datafame if we want.
# curly brackets turn into parenthesis
dfdates <- dbGetQuery(con, sql)
View(dfdates)
# use regexp_match to grab all dates
# remember we need to escape \
sql <- "SELECT crime_id,
regexp_match(original_text, '\\d{1,2}\\/\\d{1,2}\\/\\d{2}', 'g')
FROM crime_reports;"
dbGetQuery(con, sql)
# use regexp_match to grab all dates
# remember we need to escape \
sql <- "SELECT crime_id,
regexp_matches(original_text, '\\d{1,2}\\/\\d{1,2}\\/\\d{2}', 'g')
FROM crime_reports;"
dbGetQuery(con, sql)
sql <- "SELECT crime_id,
regexp_match(original_text, '-(\\d{1,2}\\/\\d{1,2}\\/\\d{2})')
FROM crime_reports;"
dbGetQuery(con, sql)
sql <- "SELECT original_text FROM crime_reports;"
df <- dbGetQuery(con, sql)
View(df)
dfr <- str_match(df[1] , '\\d{4}')
View(dfr)
str_match(df[1] , '\\d{1,2}\\/\\d{1,2}\\/\\d{2}')
str_extract(df[1] , '\\d{1,2}\\/\\d{1,2}\\/\\d{2}')
View(df)
# turn the data into a vector
dfv <- df %>% pull(original_text)
str_extract(dfv , '\\d{1,2}\\/\\d{1,2}\\/\\d{2}')
str_extract(dfv[1] , '\\d{1,2}\\/\\d{1,2}\\/\\d{2}')
?str_extract
# and this works without any errors
str_extract(dfv , '\\d{1,2}\\/\\d{1,2}\\/\\d{2}', simplify=TRUE)
# and this works without any errors
str_extract(dfv , '\\d{1,2}\\/\\d{1,2}\\/\\d{2}', simplify="TRUE")
# and this works without any errors
str_extract(dfv , '\\d{1,2}\\/\\d{1,2}\\/\\d{2}', simplify = TRUE)
# and this works without any errors
ext <- str_extract(dfv , '\\d{1,2}\\/\\d{1,2}\\/\\d{2}', simplify = TRUE)
# and this works without any errors
ext <- data.frame( str_extract(dfv , '\\d{1,2}\\/\\d{1,2}\\/\\d{2}') )
View(ext)
# and this works without any errors
ext <- data.frame( str_extract(dfv , '\\d{1,2}\\/\\d{1,2}\\/\\d{2}') ) %>%
colnames(ext) = c("dates")
# and this works without any errors
ext <- colnames(ext) = c("dates") %>%
data.frame( str_extract(dfv , '\\d{1,2}\\/\\d{1,2}\\/\\d{2}') )
# and this works without any errors
?data.frame
View(ext)
ext <- data.frame( str_extract(dfv , '\\d{1,2}\\/\\d{1,2}\\/\\d{2}'), fix.empty.names = "dates" )
colnames(ext) <- c("dates")
View(ext)
# in R
ext <- data.frame( str_extract_all(dfv , '\\d{1,2}\\/\\d{1,2}\\/\\d{2}') )
colnames(ext) <- c("dates")
View(ext)
# in R
data.frame( str_extract_all(dfv , '\\d{1,2}\\/\\d{1,2}\\/\\d{2}') )
# in R
str_extract_all(dfv, '\\d{1,2}\\/\\d{1,2}\\/\\d{2}')
# in R
ext <- data.frame( str_extract_all(dfv, '\\d{1,2}\\/\\d{1,2}\\/\\d{2}') )
View(ext)
# in R
ext <- data.frame( t(str_extract_all(dfv, '\\d{1,2}\\/\\d{1,2}\\/\\d{2}') ) )
View(ext)
t(ext)
ext_trans <- t(ext)
View(ext_trans)
sql <- "SELECT crime_id,
regexp_match(original_text, '-(\\d{1,2}\\/\\d{1,2}\\/\\d{2})')
FROM crime_reports;"
dbGetQuery(con, sql)
# to grab all dates wih regexp_matches
# remember we need to escape \
sql <- "SELECT crime_id,
regexp_matches(original_text, '\\d{1,2}\\/\\d{1,2}\\/\\d{2}', 'g')
FROM crime_reports;"
dbGetQuery(con, sql)
dfext <- dbGetQuery(con, sql)
View(dfext)
# get first hour
sql <- "SELECT crime_id,
regexp_match(original_text, '\\/\\d{2}\\n(\\d{4}')
FROM crime_reports;"
dbGetQuery(con, sql)
# get first hour
sql <- "SELECT crime_id,
regexp_match(original_text, '\\/\\d{2}\n(\\d{4}')
FROM crime_reports;"
dbGetQuery(con, sql)
# get first hour
sql <- "SELECT crime_id,
regexp_match(original_text, '\\d{1,2}\\/\\d{1,2}\\/\\d{2}')
FROM crime_reports;"
dbGetQuery(con, sql)
# get first hour
sql <- "SELECT crime_id,
regexp_match(original_text, '\\d{2}\\n(\\d{4})')
FROM crime_reports;"
dbGetQuery(con, sql)
# get first hour
sql <- "SELECT crime_id,
regexp_match(original_text, '\\d{2}\\n\\d{4}-(\\d{4})')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\n(\\d+ .+(?:Sq.|Plz.|Dr.|Ter.|Rd.))')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\n(\\d+.+(?:Sq.|Plz.|Dr.|Ter.|Rd.))')
FROM crime_reports;"
dbGetQuery(con, sql)
# use regexp_match to grab the first dates
# remember we need to escape \
sql <- "SELECT crime_id,
regexp_match(original_text, '\\d{1,2}\\/\\d{1,2}\\/\\d{2}')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\n\\d+ .+(?:Sq.|Plz.|Dr.|Ter.|Rd.)')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\n\\d .+(?:Sq.|Plz.|Dr.|Ter.|Rd.)')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\n(\\d+) .+(?:Sq.|Plz.|Dr.|Ter.|Rd.)')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\d+ \\n .+(?:Sq.|Plz.|Dr.|Ter.|Rd.)')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\d+ .\\n +(?:Sq.|Plz.|Dr.|Ter.|Rd.)')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\n\\d+ .+(?:Sq.|Plz.|Dr.|Ter.|Rd.)')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\n+(?:Sq.|Plz.|Dr.|Ter.|Rd.)')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\n .+(?:Sq.|Plz.|Dr.|Ter.|Rd.)')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\n\\d+ .+(?:Sq.|Plz.|Dr.|Ter.|Rd.)')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\n(\\d+ .+(?:Sq.|Plz.|Dr.|Ter.|Rd.))')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\n(\\d+.+(?:Sq.|Plz.|Dr.|Ter.|Rd.))')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\n(\\d+ hrs.+(?:Sq.|Plz.|Dr.|Ter.|Rd.))')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\n(\\d+hrs.+(?:Sq.|Plz.|Dr.|Ter.|Rd.))')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\n(\\d+ .+(?:Sq.|Plz.|Dr.|Ter.|Rd.))')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\n(\\d+ .\\n+(?:Sq.|Plz.|Dr.|Ter.|Rd.))')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\n(\\d+ .+(?:Sq.|Plz.|Dr.|Ter.|Rd.))')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\n((?:Sq.|Plz.|Dr.|Ter.|Rd.))')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\n(+(?:Sq.|Plz.|Dr.|Ter.|Rd.))')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\n(.+(?:Sq.|Plz.|Dr.|Ter.|Rd.))')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '. \\n(.+(?:Sq.|Plz.|Dr.|Ter.|Rd.))')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\. \\n(.+(?:Sq.|Plz.|Dr.|Ter.|Rd.))')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '\\n(.+(?:Sq.|Plz.|Dr.|Ter.|Rd.))')
FROM crime_reports;"
dbGetQuery(con, sql)
# get tret and hours
sql <- "SELECT crime_id,
regexp_match(original_text, '.\\n(\\d+ .+(?:Sq.|Plz.|Dr.|Ter.|Rd.))')
FROM crime_reports;"
dbGetQuery(con, sql)
# get street only
sql <- "SELECT crime_id,
regexp_match(original_text, 'hrs.\\n(\\d+ .+(?:Sq.|Plz.|Dr.|Ter.|Rd.))')
FROM crime_reports;"
dbGetQuery(con, sql)
# get the city
sql <- "SELECT crime_id,
regexp_match(original_text, '(?:Sq.|Plz.|Dr.|Ter.|Rd.)')
FROM crime_reports;"
dbGetQuery(con, sql)
# get the city
sql <- "SELECT crime_id,
regexp_match(original_text, '(?:Sq.|Plz.|Dr.|Ter.|Rd.)\\n(\\w+ \\w+|\\w+)\\n')
FROM crime_reports;"
dbGetQuery(con, sql)
# get the city
# look for one word \w+ or two words \\w+|\\w+|\\w+
sql <- "SELECT crime_id,
regexp_match(original_text, '(?:Sq.|Plz.|Dr.|Ter.|Rd.)\\n(\\w+ \\w+|\\w+|\\w+)\\n')
FROM crime_reports;"
dbGetQuery(con, sql)
# crime type
sql <- "SELECT crime_id,
regexp_match(original_text, '\\n(?:\\w+ \\w+|\\w+|\\w+)\\n(.*):')
FROM crime_reports;"
dbGetQuery(con, sql)
# description
sql <- "SELECT crime_id,
regexp_match(original_text, ':\\s(.+)(?:CO|SO)')
FROM crime_reports;"
dbGetQuery(con, sql)
# case number
sql <- "SELECT crime_id,
regexp_match(original_text, '(?:CO|SO)[0-9]+')
FROM crime_reports;"
dbGetQuery(con, sql)
# case number
sql <- "SELECT crime_id,
regexp_match(original_text, '(?:Co|SO)[0-9]+')
FROM crime_reports;"
dbGetQuery(con, sql)
# case number
sql <- "SELECT crime_id,
regexp_match(original_text, '(?:CO|SO)[0-9]+')
FROM crime_reports;"
dbGetQuery(con, sql)
# case number
sql <- "SELECT crime_id,
regexp_match(original_text, '(?:C0|SO)[0-9]+')
FROM crime_reports;"
dbGetQuery(con, sql)
# description
sql <- "SELECT crime_id,
regexp_match(original_text, ':\\s(.+)(?:C0|SO)')
FROM crime_reports;"
dbGetQuery(con, sql)
# let's put it all together in a dataframe
sql <- "SELECT
regexp_match(original_text, '(?:C0|SO)[0-9]+') AS case_number,
regexp_match(original_text, '\\d{1,2}\\/\\d{1,2}\\/\\d{2}') AS date_1,
regexp_match(original_text, '\\n(?:\\w+ \\w+|\\w+|\\w+)\\n(.*):') AS crime_type,
regexp_match(original_text, '(?:Sq.|Plz.|Dr.|Ter.|Rd.)\\n(\\w+ \\w+|\\w+|\\w+)\n') AS city
FROM crime_reports;"
df <- dbGetQuery(con, sql)
View(df)
# let's put it all together in a dataframe
sql <- "SELECT
regexp_match(original_text, '(?:C0|SO)[0-9]+')[1] AS case_number,
regexp_match(original_text, '\\d{1,2}\\/\\d{1,2}\\/\\d{2}') AS date_1,
regexp_match(original_text, '\\n(?:\\w+ \\w+|\\w+|\\w+)\\n(.*):') AS crime_type,
regexp_match(original_text, '(?:Sq.|Plz.|Dr.|Ter.|Rd.)\\n(\\w+ \\w+|\\w+|\\w+)\n') AS city
FROM crime_reports;"
df <- dbGetQuery(con, sql)
# let's put it all together in a dataframe
sql <- "SELECT cime_id,
regexp_match(original_text, '(?:C0|SO)[0-9]+')[1] AS case_number,
regexp_match(original_text, '\\d{1,2}\\/\\d{1,2}\\/\\d{2}') AS date_1,
regexp_match(original_text, '\\n(?:\\w+ \\w+|\\w+|\\w+)\\n(.*):') AS crime_type,
regexp_match(original_text, '(?:Sq.|Plz.|Dr.|Ter.|Rd.)\\n(\\w+ \\w+|\\w+|\\w+)\n') AS city
FROM crime_reports;"
df <- dbGetQuery(con, sql)
# grab it out of the {}
sql <- "SELECT cime_id,
(regexp_match(original_text, '(?:C0|SO)[0-9]+'))[1] AS case_number
FROM crime_reports;"
df <- dbGetQuery(con, sql)
# grab it out of the {}
sql <- "SELECT crime_id,
(regexp_match(original_text, '(?:C0|SO)[0-9]+'))[1] AS case_number
FROM crime_reports;"
df <- dbGetQuery(con, sql)
View(df)
# let's put it all together in a dataframe
sql <- "SELECT crime_id
(regexp_match(original_text, '(?:C0|SO)[0-9]+'))[1] AS case_number,
regexp_match(original_text, '\\d{1,2}\\/\\d{1,2}\\/\\d{2}') AS date_1,
regexp_match(original_text, '\\n(?:\\w+ \\w+|\\w+|\\w+)\\n(.*):') AS crime_type,
regexp_match(original_text, '(?:Sq.|Plz.|Dr.|Ter.|Rd.)\\n(\\w+ \\w+|\\w+|\\w+)\n') AS city
FROM crime_reports;"
df <- dbGetQuery(con, sql)
# let's put it all together in a dataframe
sql <- "SELECT
regexp_match(original_text, '(?:C0|SO)[0-9]+') AS case_number,
regexp_match(original_text, '\\d{1,2}\\/\\d{1,2}\\/\\d{2}') AS date_1,
regexp_match(original_text, '\\n(?:\\w+ \\w+|\\w+|\\w+)\\n(.*):') AS crime_type,
regexp_match(original_text, '(?:Sq.|Plz.|Dr.|Ter.|Rd.)\\n(\\w+ \\w+|\\w+|\\w+)\n') AS city
FROM crime_reports;"
df <- dbGetQuery(con, sql)
View(df)
dbGetQuery(con, sql)
# grab it out of the {}
sql <- "SELECT crime_id,
(regexp_match(original_text, '(?:C0|SO)[0-9]+'))[1] AS case_number
FROM crime_reports;"
dbGetQuery(con, sql)
# let's put it all together in a dataframe
sql <- "SELECT
regexp_match(original_text, '(?:C0|SO)[0-9]+') AS case_number,
regexp_match(original_text, '\\d{1,2}\\/\\d{1,2}\\/\\d{2}') AS date_1,
regexp_match(original_text, '\\n(?:\\w+ \\w+|\\w+|\\w+)\\n(.*):') AS crime_type,
regexp_match(original_text, '(?:Sq.|Plz.|Dr.|Ter.|Rd.)\\n(\\w+ \\w+|\\w+|\\w+)\n') AS city
FROM crime_reports;"
df <- dbGetQuery(con, sql)
View(df)
sql <- "SELECT
(regexp_match(original_text, '(?:C0|SO)[0-9]+'))[1] AS case_number,
regexp_match(original_text, '\\d{1,2}\\/\\d{1,2}\\/\\d{2}') AS date_1,
regexp_match(original_text, '\\n(?:\\w+ \\w+|\\w+|\\w+)\\n(.*):') AS crime_type,
regexp_match(original_text, '(?:Sq.|Plz.|Dr.|Ter.|Rd.)\\n(\\w+ \\w+|\\w+|\\w+)\n') AS city
FROM crime_reports;"
df <- dbGetQuery(con, sql)
View(df)
sql <- "SELECT
(regexp_match(original_text, '(?:C0|SO)[0-9]+'))[1] AS case_number,
(regexp_match(original_text, '\\d{1,2}\\/\\d{1,2}\\/\\d{2}'))[1] AS date_1,
(regexp_match(original_text, '\\n(?:\\w+ \\w+|\\w+|\\w+)\\n(.*):'))[1] AS crime_type,
(regexp_match(original_text, '(?:Sq.|Plz.|Dr.|Ter.|Rd.)\\n(\\w+ \\w+|\\w+|\\w+)\n'))[1] AS city
FROM crime_reports;"
df <- dbGetQuery(con, sql)
View(df)
sql <- "SELECT
(regexp_match(original_text, '(?:C0|SO)[0-9]+'))[1] AS case_number,
(regexp_match(original_text, '\\d{1,2}\\/\\d{1,2}\\/\\d{2}'))[1] AS date_1,
(regexp_match(original_text, '(?:Sq.|Plz.|Dr.|Ter.|Rd.)\\n(\\w+ \\w+|\\w+|\\w+)\n'))[1] AS city
(regexp_match(original_text, '\\n(?:\\w+ \\w+|\\w+|\\w+)\\n(.*):'))[1] AS crime_type,
(regexp_match(original_text, ':\\s(.+)(?:C0|SO)'))[1] AS description,
FROM crime_reports;"
df <- dbGetQuery(con, sql)
sql <- "SELECT
(regexp_match(original_text, '(?:C0|SO)[0-9]+'))[1] AS case_number,
(regexp_match(original_text, '\\d{1,2}\\/\\d{1,2}\\/\\d{2}'))[1] AS date_1,
(regexp_match(original_text, '(?:Sq.|Plz.|Dr.|Ter.|Rd.)\\n(\\w+ \\w+|\\w+|\\w+)\n'))[1] AS city,
(regexp_match(original_text, '\\n(?:\\w+ \\w+|\\w+|\\w+)\\n(.*):'))[1] AS crime_type,
(regexp_match(original_text, ':\\s(.+)(?:C0|SO)'))[1] AS description
FROM crime_reports;"
df <- dbGetQuery(con, sql)
View(df)
# let's see what it looks like when we save it
write_csv(df,'test.csv', na = '')
str_match('The game starts at 7 p.m. on May 2, 2019.' , '\\d{4}')
# In R
str_replace("bat","b","c")
# we know there are line breaks in the description field, so we can fix that in R
df$description <- str_replace(df$description,"\n"," ")
View(df)
# let's see if that worked
write_csv(df,'test2.csv', na = '')
sql <- "SELECT
(regexp_match(original_text, '(?:C0|SO)[0-9]+'))[1] AS case_number,
(regexp_match(original_text, '\\d{1,2}\\/\\d{1,2}\\/\\d{2}'))[1] AS date_1,
(regexp_match(original_text, '(?:Sq.|Plz.|Dr.|Ter.|Rd.)\\n(\\w+ \\w+|\\w+|\\w+)\n'))[1] AS city,
(regexp_match(original_text, '\\n(?:\\w+ \\w+|\\w+|\\w+)\\n(.*):'))[1] AS crime_type,
(regexp_match(original_text, ':\\s(.+)(?:C0|SO)'))[1] AS description
FROM crime_reports;"
df <- dbGetQuery(con, sql)
# almost. Is there a str_replace all?
# we know there are line breaks in the description field, so we can fix that in R
df$description <- str_replace_all(df$description,"\n"," ")
# let's see if that worked
write_csv(df,'test3.csv', na = '')
# disconnect
dbDisconnect(con)
dbUnloadDriver(drv)
