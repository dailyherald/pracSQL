setwd("~/anaconda3/envs/pracSQL/Chapter_01")
library("RPostgreSQL")
# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
dbDisconnect(con)
dbUnloadDriver(drv)
# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# creates a connection to the postgres database
# note that "con" will be used later in each connection to the database
con <- dbConnect(drv, dbname = "analysis",
host = "localhost", port = 5432,
user = "tbroderick")#, password = pw)
#test to see if connection works, and teachers table is there
dbExistsTable(con, "teachers")
# now let's try and make a db for R
sql_command <- "CREATE DATABASE aranalysis;"
dbGetQuery(con, sql_command)
mkteachers <- "CREATE TABLE teachers (
id bigserial,
first_name varchar(25),
last_name varchar(50),
school varchar(50),
hire_date date,
salary numeric
);"
dbGetQuery(con, mkteachers)
# success! Now let's create the teachers db and populate it.
# but first, let's disconnect and connect to our new database
dbDisconnect(con)
dbUnloadDriver(drv)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "aranalysis",
host = "localhost", port = 5432,
user = "tbroderick")
mkteachers <- "CREATE TABLE teachers (
id bigserial,
first_name varchar(25),
last_name varchar(50),
school varchar(50),
hire_date date,
salary numeric
);"
dbGetQuery(con, mkteachers)
# and now let's populate it
addteach <- "INSERT INTO teachers (first_name, last_name, school, hire_date, salary)
VALUES ('Janet', 'Smith', 'F.D. Roosevelt HS', '2011-10-30', 36200),
('Lee', 'Reynolds', 'F.D. Roosevelt HS', '1993-05-22', 65000),
('Samuel', 'Cole', 'Myers Middle School', '2005-08-01', 43500),
('Samantha', 'Bush', 'Myers Middle School', '2011-10-30', 36200),
('Betty', 'Diaz', 'Myers Middle School', '2005-08-30', 43500),
('Kathleen', 'Roush', 'F.D. Roosevelt HS', '2010-10-22', 38500);
"
dbGetQuery(con, addteach)
# let's see if it's there
dbExistsTable(con, "teachers")
df_postgres <- dbGetQuery(con, "SELECT * from teachers")
df_postgress
df_postgres
summary(df_postgres)
View(df_postgres)
# how about data types
sapply(df_postgres, class)
# disconnect and unload driver when done
dbDisconnect(con)
dbUnloadDriver(drv)
